#!/usr/bin/env python
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞ –¥–∞–Ω–Ω—ã—Ö –∏–∑ JSON —Ñ–∞–π–ª–æ–≤ –≤ PostgreSQL.

–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
    python import_data.py

–ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç —Ñ–∞–π–ª—ã:
    - data_fixtures.json - –æ—Å–Ω–æ–≤–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    - data_users.json - –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏
"""

import os
import sys
import django
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
project_root = Path(__file__).parent
sys.path.insert(0, str(project_root / 'softlex'))

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'softlex.settings')
django.setup()

from django.core.management import call_command
from django.db import connection


def check_postgres_connection():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ PostgreSQL."""
    try:
        with connection.cursor() as cursor:
            cursor.execute("SELECT 1")
        print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ PostgreSQL —É—Å–ø–µ—à–Ω–æ")
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ PostgreSQL: {e}")
        print("–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ PostgreSQL –∑–∞–ø—É—â–µ–Ω: make up")
        return False


def check_fixture_files():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è —Ñ–∞–π–ª–æ–≤ —Å –¥–∞–Ω–Ω—ã–º–∏."""
    files = ['data_fixtures.json', 'data_users.json']
    missing_files = []
    
    for file in files:
        if not (project_root / file).exists():
            missing_files.append(file)
    
    if missing_files:
        print(f"‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω—ã —Ñ–∞–π–ª—ã: {', '.join(missing_files)}")
        print("–°–Ω–∞—á–∞–ª–∞ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ —ç–∫—Å–ø–æ—Ä—Ç: python export_data.py")
        return False
    
    print("‚úÖ –§–∞–π–ª—ã —Å –¥–∞–Ω–Ω—ã–º–∏ –Ω–∞–π–¥–µ–Ω—ã")
    return True


def import_data():
    """–ò–º–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö –≤ PostgreSQL."""
    
    print("–ù–∞—á–∏–Ω–∞–µ–º –∏–º–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö –≤ PostgreSQL...")
    
    try:
        # –°–Ω–∞—á–∞–ª–∞ –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        print("–ò–º–ø–æ—Ä—Ç –æ—Å–Ω–æ–≤–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö...")
        call_command('loaddata', 'data_fixtures.json')
        
        # –ó–∞—Ç–µ–º –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        print("–ò–º–ø–æ—Ä—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...")
        call_command('loaddata', 'data_users.json')
        
        print("‚úÖ –ò–º–ø–æ—Ä—Ç –∑–∞–≤–µ—Ä—à–µ–Ω!")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        show_import_stats()
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–º–ø–æ—Ä—Ç–µ: {e}")
        return False
    
    return True


def show_import_stats():
    """–ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö."""
    from django.contrib.auth import get_user_model
    from testcases.models import Project, TestCase
    
    User = get_user_model()
    
    print("\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö:")
    print(f"  - –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {User.objects.count()}")
    print(f"  - –ü—Ä–æ–µ–∫—Ç–æ–≤: {Project.objects.count()}")
    print(f"  - –¢–µ—Å—Ç-–∫–µ–π—Å–æ–≤: {TestCase.objects.count()}")
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    superusers = User.objects.filter(is_superuser=True)
    if superusers.exists():
        print(f"  - –°—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {superusers.count()}")
        for user in superusers:
            print(f"    * {user.username} ({user.email})")


def clean_fixture_files():
    """–£–¥–∞–ª–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ —Å –¥–∞–Ω–Ω—ã–º–∏."""
    files = ['data_fixtures.json', 'data_users.json']
    
    for file in files:
        file_path = project_root / file
        if file_path.exists():
            file_path.unlink()
            print(f"üóëÔ∏è  –£–¥–∞–ª–µ–Ω —Ñ–∞–π–ª: {file}")


if __name__ == '__main__':
    print("=== –ò–º–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö –≤ PostgreSQL ===")
    
    if not check_postgres_connection():
        sys.exit(1)
    
    if not check_fixture_files():
        sys.exit(1)
    
    if import_data():
        print("\nüéâ –ò–º–ø–æ—Ä—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω!")
        
        # –°–ø—Ä–∞—à–∏–≤–∞–µ–º, –Ω—É–∂–Ω–æ –ª–∏ —É–¥–∞–ª–∏—Ç—å –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
        response = input("\n–£–¥–∞–ª–∏—Ç—å –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã —Å –¥–∞–Ω–Ω—ã–º–∏? (y/N): ").strip().lower()
        if response in ['y', 'yes', '–¥–∞']:
            clean_fixture_files()
        
        print("\n–ü—Ä–æ–µ–∫—Ç –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!")
        print("–î–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost:8000")
    else:
        print("\n‚ùå –ò–º–ø–æ—Ä—Ç –∑–∞–≤–µ—Ä—à–∏–ª—Å—è —Å –æ—à–∏–±–∫–∞–º–∏")
        sys.exit(1)
