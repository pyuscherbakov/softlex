#!/usr/bin/env python
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞ –¥–∞–Ω–Ω—ã—Ö –∏–∑ SQLite –≤ JSON —Ñ–∞–π–ª—ã –¥–ª—è –ø–æ—Å–ª–µ–¥—É—é—â–µ–≥–æ –∏–º–ø–æ—Ä—Ç–∞ –≤ PostgreSQL.

–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
    python export_data.py

–°–æ–∑–¥–∞—Å—Ç —Ñ–∞–π–ª—ã:
    - data_fixtures.json - –æ—Å–Ω–æ–≤–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    - data_users.json - –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ (–æ—Ç–¥–µ–ª—å–Ω–æ –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏)
"""

import os
import sys
import django
import json
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
project_root = Path(__file__).parent
sys.path.insert(0, str(project_root / 'softlex'))

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'softlex.settings')
django.setup()

from django.core.management import call_command
from django.core import serializers
from io import StringIO


def export_data():
    """–≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö –∏–∑ SQLite –≤ JSON —Ñ–∞–π–ª—ã."""
    
    print("–ù–∞—á–∏–Ω–∞–µ–º —ç–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö –∏–∑ SQLite...")
    
    # –í—Ä–µ–º–µ–Ω–Ω–æ –ø–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ SQLite –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞
    from django.conf import settings
    original_databases = settings.DATABASES.copy()
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º SQLite –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞
    settings.DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': project_root / 'softlex' / 'db.sqlite3',
        }
    }
    
    try:
        # –≠–∫—Å–ø–æ—Ä—Ç –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è (–∫—Ä–æ–º–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π)
        print("–≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...")
        call_command('dumpdata', 
                    'testcases', 
                    'contenttypes', 
                    'sessions',
                    'admin',
                    'auth.permission',
                    'auth.group',
                    output='data_fixtures.json',
                    indent=2)
        
        # –≠–∫—Å–ø–æ—Ä—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –æ—Ç–¥–µ–ª—å–Ω–æ
        print("–≠–∫—Å–ø–æ—Ä—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...")
        call_command('dumpdata', 
                    'users.user',
                    'auth.user',
                    output='data_users.json',
                    indent=2)
        
        print("‚úÖ –≠–∫—Å–ø–æ—Ä—Ç –∑–∞–≤–µ—Ä—à–µ–Ω!")
        print("–°–æ–∑–¥–∞–Ω—ã —Ñ–∞–π–ª—ã:")
        print("  - data_fixtures.json - –æ—Å–Ω–æ–≤–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è")
        print("  - data_users.json - –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —ç–∫—Å–ø–æ—Ä—Ç–µ: {e}")
        return False
    
    finally:
        # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ë–î
        settings.DATABASES = original_databases
    
    return True


def check_sqlite_exists():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è SQLite —Ñ–∞–π–ª–∞."""
    sqlite_path = project_root / 'softlex' / 'db.sqlite3'
    if not sqlite_path.exists():
        print(f"‚ùå –§–∞–π–ª SQLite –Ω–µ –Ω–∞–π–¥–µ–Ω: {sqlite_path}")
        print("–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —É –≤–∞—Å –µ—Å—Ç—å –¥–∞–Ω–Ω—ã–µ –≤ SQLite –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞.")
        return False
    return True


if __name__ == '__main__':
    print("=== –≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö –∏–∑ SQLite –≤ PostgreSQL ===")
    
    if not check_sqlite_exists():
        sys.exit(1)
    
    if export_data():
        print("\nüéâ –≠–∫—Å–ø–æ—Ä—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω!")
        print("\n–°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
        print("1. –ó–∞–ø—É—Å—Ç–∏—Ç–µ PostgreSQL: make up")
        print("2. –ò–º–ø–æ—Ä—Ç–∏—Ä—É–π—Ç–µ –¥–∞–Ω–Ω—ã–µ: python import_data.py")
    else:
        print("\n‚ùå –≠–∫—Å–ø–æ—Ä—Ç –∑–∞–≤–µ—Ä—à–∏–ª—Å—è —Å –æ—à–∏–±–∫–∞–º–∏")
        sys.exit(1)
